<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.github.hyfsy</groupId>
    <artifactId>hot-refresh-parent</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <!-- 项目基本信息 -->
    <name>Hot Refresh ${project.version}</name>
    <description>Hot refresh the class on the production environment</description>
    <url>https://github.com/hyfsy/hot-refresh</url>
    <prerequisites>
        <maven>3.5.4</maven>
    </prerequisites>

    <!-- 授权协议 -->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <!-- SCM地址 -->
    <scm>
        <url>https://github.com/hyfsy/hot-refresh</url>
        <connection>scm:git:https://github.com/hyfsy/hot-refresh.git</connection>
        <developerConnection>scm:git:https://github.com/hyfsy/hot-refresh.git</developerConnection>
        <tag>hot-refresh-${revision}</tag>
    </scm>

    <developers>
        <!-- 个人信息，可选 -->
        <developer>
            <id>hyfsy</id>
            <name>hyfsy</name>
            <email>1577975140@qq.com</email>
            <url>https://github.com/hyfsy</url>
            <roles>
                <role>Developer</role>
                <role>Project Manager</role>
            </roles>
            <organization>Hyfsy</organization>
            <organizationUrl>http://hyfsy.github.io</organizationUrl>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <organization>
        <name>Hyfsy Group</name>
        <url>https://github.com/hyfsy</url>
    </organization>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/hyfsy/hot-refresh/issues</url>
    </issueManagement>

    <!-- https://tech.meituan.com/2022/03/17/java-hotswap-sonic.html -->
    <!-- https://dcevm.github.io -->
    <!-- http://hotswapagent.org -->
    <!-- https://github.com/HotswapProjects/HotswapAgent -->
    <!-- http://greenteajug.cn/2014/09/23/hotcode2%EF%BC%8Cjava%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8A%80%E6%9C%AF -->

    <properties>
        <!-- basic properties -->
        <revision>1.2.5</revision>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <javadoc.skip>false</javadoc.skip>
        <gpg.skip>false</gpg.skip>
        <auto.close.and.release>false</auto.close.and.release>

        <!-- plugin version -->
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
        <flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-install-plugin.version>2.4</maven-install-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
        <maven-shade-plugin.version>3.3.0</maven-shade-plugin.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <build-helper-maven-plugin.version>1.10</build-helper-maven-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
        <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>

        <!-- dependency version -->
        <asm.version>5.2</asm.version>
        <bytebuddy.version>1.8.17</bytebuddy.version>
        <junit.version>4.12</junit.version>
        <mockito.version>2.23.4</mockito.version>
        <!-- avoid low version compile idea bug -->
        <lombok.version>1.18.14</lombok.version>
        <mapstruct.version>1.4.1.Final</mapstruct.version>
        <spring.version>4.3.2.RELEASE</spring.version>
        <spring-boot.version>1.4.0.RELEASE</spring-boot.version>
        <servlet-api.version>3.0.1</servlet-api.version>
        <mybatis.version>3.5.9</mybatis.version>
        <apache-httpcomponents.version>4.5.13</apache-httpcomponents.version>
        <fastjson.version>1.2.76</fastjson.version>
        <arthas.version>3.6.3</arthas.version>
        <arthas-spring-boot.version>3.3.6</arthas-spring-boot.version>
        <reflections.version>0.10.2</reflections.version>
        <allatori.version>8.2</allatori.version>
        <netty.version>4.1.76.Final</netty.version>
        <protobuf.version>3.17.3</protobuf.version>
        <grpc.version>1.39.0</grpc.version>
    </properties>

    <modules>
        <module>common</module>
        <module>core</module>
        <module>remoting</module>
        <module>client</module>
        <module>client-api</module>
        <module>server</module>
        <module>server-all</module>
        <module>shadow</module>
        <module>client-distribution</module><!-- 注意：该位置不能调整，防止打包出错 -->

        <module>adapters</module>
        <module>plugins</module>
        <module>test-cases</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-remoting</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-client-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-server</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-shadow</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-adapter-lombok</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-adapter-mapstruct</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-adapter-spring-boot</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-adapter-mybatis</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-adapter-skywalking</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-plugin-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-plugin-netty</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-plugin-grpc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-plugin-spring-boot</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-plugin-fastjson</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-plugin-execute</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hot-refresh-plugin-arthas</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 所有的子项目默认依赖 -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- 推荐在Release环境中添加这些插件和仓库，防止开发时打包慢 -->
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <!-- Source 打源码包 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${maven-source-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </plugin>
                    <!-- JavaDoc 打JavaDoc包 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- 忽略打包报错（文档不符合规范） -->
                            <failOnError>false</failOnError>
                            <doclint>none</doclint>
                            <skip>${javadoc.skip}</skip>
                            <show>public</show>
                            <charset>UTF-8</charset>
                            <encoding>UTF-8</encoding>
                            <docencoding>UTF-8</docencoding>
                            <links>
                                <link>http://docs.oracle.com/javase/8/docs/api</link>
                            </links>
                        </configuration>
                    </plugin>
                    <!-- GPG -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <!-- 进行验签 -->
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skip>${gpg.skip}</skip>
                        </configuration>
                    </plugin>
                    <!-- 上传到Nexus中自动Close并Release，无需再进入Nexus操作 -->
                    <plugin>
                        <!-- 爆红不管 -->
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexus-staging-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <!-- id要与settings.xml里的server指定的id保持一致 -->
                            <serverId>sonatype-oss</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <!-- 发布到阶段存储库成功后是否自动Release，进行中央仓库的同步，这里我们默认去网页上手动进行同步 -->
                            <autoReleaseAfterClose>${auto.close.and.release}</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

            <!-- Upload repository -->
            <distributionManagement>
                <!-- id要与settings.xml里的server指定的id保持一致 -->
                <snapshotRepository>
                    <id>sonatype-oss</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <repository>
                    <id>sonatype-oss</id>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>infra-shadow</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                            <configuration>
                                <mainClass>com.hyf.hotrefresh.shadow.infrastructure.InfrastructureClassShadow</mainClass>
                                <!-- Reflections scan class use parallel stream lead to use ForkJoinPool -->
                                <cleanupDaemonThreads>false</cleanupDaemonThreads>
                                <includePluginDependencies>true</includePluginDependencies>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.reflections</groupId>
                            <artifactId>reflections</artifactId>
                            <version>${reflections.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>shade</id>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <!-- 防止和flatten插件冲突，导致revision无效 -->
                                <createDependencyReducedPom>false</createDependencyReducedPom>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                        <!-- 排除一些无用的配置文件 -->
                        <excludes>
                            <exclude>**/allatori.xml</exclude>
                            <exclude>**/rebel.xml</exclude>
                        </excludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <pomElements>
                        <dependencies>expand</dependencies>
                    </pomElements>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>